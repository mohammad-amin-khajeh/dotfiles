# A TOML linter such as https://taplo.tamasfe.dev/ can use this schema to validate your config.
# If you encounter any issues, please make an issue at https://github.com/yazi-rs/schemas.
"$schema" = "https://yazi-rs.github.io/schemas/keymap.json"

[manager]

keymap = [

	{ on = [ "g", "a" ],      run = "cd ~/Documents/harddrive/anime/",    desc = "cd ~/Documents/harddrive/anime/" },
	{ on = [ "g", "b" ],      run = "cd ~/Pictures/screenshots",          desc = "cd ~/Pictures/screenshots" },
	{ on = [ "g", "c", "d" ], run = "cd ~/Documents/code",                desc = "cd ~/Documents/code" },
	{ on = [ "g", "c", "b" ], run = "cd ~/Documents/books/",              desc = "cd ~/Documents/books/" },
	{ on = [ "g", "c", "o" ], run = "cd ~/.config",                       desc = "cd ~/.config" },
	{ on = [ "g", "c", "p" ], run = "cd ~/Pictures/Code",                 desc = "cd ~/Pictures/Code" },
	{ on = [ "g", "c", "n" ], run = "cd ~/Videos/code/neetcodeIO/",       desc = "cd ~/Videos/code/neetcodeIO/" },
	{ on = [ "g", "c", "v" ], run = "cd ~/Videos/code/",                  desc = "cd ~/Videos/code" },
	{ on = [ "g", "d", "d" ], run = "cd ~/Downloads",                     desc = "cd ~/Downloads" },
	{ on = [ "g", "d", "f" ], run = "cd ~/Documents",                     desc = "cd ~/Documents" },
	{ on = [ "g", "f"],       run = "cd ~/Documents/flash",               desc = "cd ~/Documents/flash" },
	{ on = [ "g", "e"],       run = "cd ~/Documents/harddrive",           desc = "cd ~/Documents/harddrive" },
	{ on = [ "g", "l"],       run = "cd ~/.local",                        desc = "cd ~/.local" },
	{ on = [ "g", "m"],       run = "cd ~/Music",                         desc = "cd ~/Music" },
	{ on = [ "g", "p"],       run = "cd ~/Documents/phone",               desc = "cd ~/Documents/phone" },
	{ on = [ "g", "v"],       run = "cd ~/Videos",                        desc = "cd ~/Videos" },
	{ on = [ "g", "w"],       run = "cd ~/Pictures/wallpapers",           desc = "cd ~/Pictures/wallpapers" },
	{ on = [ "g", "y"],       run = "cd ~/Videos/youtube",                desc = "cd ~/Videos/youtube" },
	{ on = [ "g", "s"],       run = "cd ~/Videos/screencaps",             desc = "cd ~/Videos/screencaps" },
	{ on = [ "g", "t"],       run = "cd '~/Downloads/Telegram Desktop/'", desc = "cd ~/Downloads/Telegram Desktop" },

	{ on = "<Esc>", run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = "<C-[>", run = "escape",             desc = "Exit visual mode, clear selected, or cancel search" },
	{ on = "q",     run = "quit",               desc = "Exit the process" },
	{ on = "<c-q>", run = "quit",               desc = "Exit the process" },
	{ on = "Q",     run = "quit --no-cwd-file", desc = "Exit the process without writing cwd-file" },
	{ on = "<C-z>", run = "suspend",            desc = "Suspend the process" },

  { on = [ "1" ],           run = "plugin relative-motions --args=1",   desc = "Move in relative steps" },
  { on = [ "2" ],           run = "plugin relative-motions --args=2",   desc = "Move in relative steps" },
  { on = [ "3" ],           run = "plugin relative-motions --args=3",   desc = "Move in relative steps" },
  { on = [ "4" ],           run = "plugin relative-motions --args=4",   desc = "Move in relative steps" },
  { on = [ "5" ],           run = "plugin relative-motions --args=5",   desc = "Move in relative steps" },
  { on = [ "6" ],           run = "plugin relative-motions --args=6",   desc = "Move in relative steps" },
  { on = [ "7" ],           run = "plugin relative-motions --args=7",   desc = "Move in relative steps" },
  { on = [ "8" ],           run = "plugin relative-motions --args=8",   desc = "Move in relative steps" },
  { on = [ "9" ],           run = "plugin relative-motions --args=9",   desc = "Move in relative steps" },

  { on = [ "c", "t" ],      run = "plugin ouch --args=tgz",   desc = "compress to tar.gz with ouch" },
  { on = [ "c", "z" ],      run = "plugin ouch --args=zip",   desc = "compress to zip with ouch" },
  { on = [ "c", "7" ],      run = "plugin ouch --args=7z",  desc = "compress to 7z with ouch" },

	# Hopping
	{ on = "k", run = "arrow -1", desc = "Move cursor up" },
	{ on = "j", run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<Up>",    run = "arrow -1", desc = "Move cursor up" },
	{ on = "<Down>",  run = "arrow 1",  desc = "Move cursor down" },

	{ on = "<C-u>", run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<C-d>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<C-b>", run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<C-f>", run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = "<S-PageUp>",   run = "arrow -50%",  desc = "Move cursor up half page" },
	{ on = "<S-PageDown>", run = "arrow 50%",   desc = "Move cursor down half page" },
	{ on = "<PageUp>",     run = "arrow -100%", desc = "Move cursor up one page" },
	{ on = "<PageDown>",   run = "arrow 100%",  desc = "Move cursor down one page" },

	{ on = [ "g", "g" ], run = "arrow -99999999", desc = "Move cursor to the top" },
	{ on = "G",          run = "arrow 99999999",  desc = "Move cursor to the bottom" },

	# Navigation
	{ on = "h", run = "leave", desc = "Go back to the parent directory" },
	{ on = "l", run = "plugin smart-enter", desc = "Enter the child directory, or open the file" },

	{ on = "<Left>",  run = "leave",    desc = "Go back to the parent directory" },
	{ on = "<Right>", run = "plugin smart-enter",    desc = "Enter the child directory, or open the file" },

	{ on = "H", run = "back",    desc = "Go back to the previous directory" },
	{ on = "L", run = "forward", desc = "Go forward to the next directory" },

	# Seeking
	{ on = "K", run = "seek -5", desc = "Seek up 5 units in the preview" },
	{ on = "J", run = "seek 5",  desc = "Seek down 5 units in the preview" },

	# Selection
	{ on = "<Space>", run = [ "toggle", "arrow 1" ], desc = "Toggle the current selection state" },
	{ on = "v",       run = "visual_mode",                        desc = "Enter visual mode (selection mode)" },
	{ on = "V",       run = "visual_mode --unset",                desc = "Enter visual mode (unset mode)" },
	{ on = "<C-a>",   run = "toggle_all --state=on",              desc = "Select all files" },
	{ on = "<C-r>",   run = "toggle_all",                         desc = "Inverse selection of all files" },

	# Operation
	{ on = "<C-c>",         run = '''shell 'for path in "$@"; do echo "file://$path"; done | xclip -i -sel c -t text/uri-list' --confirm'''},
	{ on = [ "s", "w" ],    run = '''shell 'wallpaper.sh "$1"' --confirm''',    desc = "Set new wallpaper" },
	{ on = "o",             run = "open",                             desc = "Open selected files" },
	{ on = "O",             run = "open --interactive",               desc = "Open selected files interactively" },
	{ on = "<Enter>",       run = "open",                             desc = "Open selected files" },
	{ on = "<S-Enter>",     run = "open --interactive",               desc = "Open selected files interactively" },
	{ on = "y",             run = "yank",                             desc = "Yank selected files (copy)" },
	{ on = "d",             run = "yank --cut",                       desc = "Yank selected files (cut)" },
	{ on = "p",             run = "paste",                            desc = "Paste yanked files" },
	{ on = "P",             run = "paste --force",                    desc = "Paste yanked files (overwrite if the destination exists)" },
	{ on = "-",             run = "link",                             desc = "Symlink the absolute path of yanked files" },
	{ on = "_",             run = "link --relative",                  desc = "Symlink the relative path of yanked files" },
	{ on = "Y",             run = "unyank",                           desc = "Cancel the yank status" },
	{ on = "X",             run = "unyank",                           desc = "Cancel the yank status" },
	{ on = "x",             run = "remove",                           desc = "Trash selected files" },
	{ on = "D",             run = "remove --permanently",             desc = "Permanently delete selected files" },
	{ on = "a",             run = "create",                           desc = "Create a file (ends with / for directories)" },
	{ on = "r",             run = "rename --cursor=before_ext",       desc = "Rename selected file(s)" },
	{ on = ";",             run = "shell --interactive",              desc = "Run a shell command" },
	{ on = ":",             run = "shell --block --interactive",      desc = "Run a shell command (block until finishes)" },
	{ on = "`",             run = 'shell "$SHELL" --block',           desc = "Run a shell command (block until finishes)" },
	{ on = ".",             run = "hidden toggle",                    desc = "Toggle the visibility of hidden files" },

	{ on = [ "s", "f" ],    run = "search fd",                        desc = "Search files by name using fd" },
	{ on = "S",             run = "search rg",                        desc = "Search files by content using ripgrep" },
	{ on = "<C-s>",         run = "search none",                      desc = "Cancel the ongoing search" },
	{ on = "z",             run = "plugin zoxide",                    desc = "Jump to a directory using zoxide" },
	{ on = "Z",             run = "plugin fzf",                       desc = "Jump to a directory or reveal a file using fzf" },

	# Linemode
	{ on = [ "m", "s" ], run = "linemode size",        desc = "Set linemode to size" },
	{ on = [ "m", "p" ], run = "linemode perm",        desc = "Set linemode to permissions" },
	{ on = [ "m", "c" ], run = "linemode btime",       desc = "Set linemode to ctime" },
	{ on = [ "m", "m" ], run = "linemode mtime",       desc = "Set linemode to mtime" },
	{ on = [ "m", "o" ], run = "linemode owner",       desc = "Set linemode to owner" },
	{ on = [ "m", "n" ], run = "linemode none",        desc = "Set linemode to none" },

	# Copy
	{ on = [ "c", "c" ], run = "copy path",                   desc = "Copy the file path" },
	{ on = [ "c", "d" ], run = "copy dirname",                desc = "Copy the directory path" },
	{ on = [ "c", "f" ], run = "copy filename",               desc = "Copy the filename" },
	{ on = [ "c", "n" ], run = "copy name_without_ext",       desc = "Copy the filename without extension" },
	{ on = [ "c", "C" ], run = ["plugin copy-file-contents"], desc = "Copy contents of file" },

  # Chmod
	{ on = [ "c", "m" ], run = "plugin chmod",                desc = "chmod selected files" },


	# Filter
	{ on = "f", run = "filter --smart", desc = "Filter files" },

	# Find
	{ on = "/", run = "find --smart",            desc = "Find next file" },
	{ on = "?", run = "find --previous --smart", desc = "Find previous file" },
	{ on = "n", run = "find_arrow",              desc = "Go to the next found" },
	{ on = "N", run = "find_arrow --previous",   desc = "Go to the previous found" },

	# Sorting
	{ on = [ "s", "M" ], run = [ "sort mtime --reverse=no", "linemode mtime" ],    desc = "Sort by modified time" },
	{ on = [ "s", "m" ], run = [ "sort mtime --reverse", "linemode mtime" ],       desc = "Sort by modified time (reverse)" },
	{ on = [ "s", "C" ], run = [ "sort btime --reverse=no", "linemode ctime" ],    desc = "Sort by created time" },
	{ on = [ "s", "c" ], run = [ "sort btime --reverse", "linemode ctime" ],       desc = "Sort by created time (reverse)" },
	{ on = [ "s", "e" ], run = "sort extension --reverse=no",                      desc = "Sort by extension" },
	{ on = [ "s", "E" ], run = "sort extension --reverse",                         desc = "Sort by extension (reverse)" },
	{ on = [ "s", "a" ], run = "sort alphabetical --reverse=no",                   desc = "Sort alphabetically" },
	{ on = [ "s", "A" ], run = "sort alphabetical --reverse",                      desc = "Sort alphabetically (reverse)" },
	{ on = [ "s", "n" ], run = "sort natural --reverse=no",                        desc = "Sort naturally" },
	{ on = [ "s", "N" ], run = "sort natural --reverse",                           desc = "Sort naturally (reverse)" },
	{ on = [ "s", "S" ], run = [ "sort size --reverse=no", "linemode size" ],      desc = "Sort by size" },
	{ on = [ "s", "s" ], run = [ "sort size --reverse", "linemode size" ],         desc = "Sort by size (reverse)" },
	{ on = [ "s", "r" ], run = "sort random --reverse=no",                         desc = "Sort randomly" },

	# Goto
	{ on = [ "g", "h" ],       run = "cd ~",             desc = "Go to the home directory" },
	{ on = [ "g", "<Space>" ], run = "cd --interactive", desc = "Go to a directory interactively" },

	# Tabs
	{ on = "t", run = "tab_create --current",  desc = "Create a new tab with CWD" },
	{ on = [ "g", "1" ], run = "tab_switch 0", desc = "Switch to the first tab" },
	{ on = [ "g", "2" ], run = "tab_switch 1", desc = "Switch to the second tab" },
	{ on = [ "g", "3" ], run = "tab_switch 2", desc = "Switch to the third tab" },
	{ on = [ "g", "4" ], run = "tab_switch 3", desc = "Switch to the fourth tab" },
	{ on = [ "g", "5" ], run = "tab_switch 4", desc = "Switch to the fifth tab" },
	{ on = [ "g", "6" ], run = "tab_switch 5", desc = "Switch to the sixth tab" },
	{ on = [ "g", "7" ], run = "tab_switch 6", desc = "Switch to the seventh tab" },
	{ on = [ "g", "8" ], run = "tab_switch 7", desc = "Switch to the eighth tab" },
	{ on = [ "g", "9" ], run = "tab_switch 8", desc = "Switch to the ninth tab" },


	{ on = "[", run = "tab_switch -1 --relative", desc = "Switch to the previous tab" },
	{ on = "]", run = "tab_switch 1 --relative",  desc = "Switch to the next tab" },

	{ on = "{", run = "tab_swap -1", desc = "Swap current tab with previous tab" },
	{ on = "}", run = "tab_swap 1",  desc = "Swap current tab with next tab" },

	# Tasks
	{ on = "w", run = "tasks_show", desc = "Show task manager" },

	# Help
	{ on = "~",    run = "help", desc = "Open help" },
	{ on = "<F1>", run = "help", desc = "Open help" },

  # Go to the root of the current git repo
	{ on = [ "g", "r" ], run = '''shell 'ya emit cd "$(git rev-parse --show-toplevel)"' ''', desc = "cd git root" },
]

# [tasks]
# prepend_keymap = []
#
# [pick]
# prepend_keymap = []
#
# [input]
# prepend_keymap = []
